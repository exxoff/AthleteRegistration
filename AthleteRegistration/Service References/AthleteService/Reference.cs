//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace AthleteRegistration.AthleteService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AthleteDto", Namespace="http://schemas.datacontract.org/2004/07/AthleteRegistrationService")]
    [System.SerializableAttribute()]
    public partial class AthleteDto : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AthleteIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BibField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EMailAddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FirstNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GroupField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LastNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string WaveNumberField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AthleteId {
            get {
                return this.AthleteIdField;
            }
            set {
                if ((this.AthleteIdField.Equals(value) != true)) {
                    this.AthleteIdField = value;
                    this.RaisePropertyChanged("AthleteId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Bib {
            get {
                return this.BibField;
            }
            set {
                if ((this.BibField.Equals(value) != true)) {
                    this.BibField = value;
                    this.RaisePropertyChanged("Bib");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string EMailAddress {
            get {
                return this.EMailAddressField;
            }
            set {
                if ((object.ReferenceEquals(this.EMailAddressField, value) != true)) {
                    this.EMailAddressField = value;
                    this.RaisePropertyChanged("EMailAddress");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FirstName {
            get {
                return this.FirstNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FirstNameField, value) != true)) {
                    this.FirstNameField = value;
                    this.RaisePropertyChanged("FirstName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Group {
            get {
                return this.GroupField;
            }
            set {
                if ((object.ReferenceEquals(this.GroupField, value) != true)) {
                    this.GroupField = value;
                    this.RaisePropertyChanged("Group");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LastName {
            get {
                return this.LastNameField;
            }
            set {
                if ((object.ReferenceEquals(this.LastNameField, value) != true)) {
                    this.LastNameField = value;
                    this.RaisePropertyChanged("LastName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string WaveNumber {
            get {
                return this.WaveNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.WaveNumberField, value) != true)) {
                    this.WaveNumberField = value;
                    this.RaisePropertyChanged("WaveNumber");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AthleteService.IAthleteService")]
    public interface IAthleteService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAthleteService/SetDatabaseType", ReplyAction="http://tempuri.org/IAthleteService/SetDatabaseTypeResponse")]
        void SetDatabaseType(string Type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAthleteService/SetDatabaseType", ReplyAction="http://tempuri.org/IAthleteService/SetDatabaseTypeResponse")]
        System.Threading.Tasks.Task SetDatabaseTypeAsync(string Type);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAthleteService/SetDatabaseFile", ReplyAction="http://tempuri.org/IAthleteService/SetDatabaseFileResponse")]
        void SetDatabaseFile(string File);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAthleteService/SetDatabaseFile", ReplyAction="http://tempuri.org/IAthleteService/SetDatabaseFileResponse")]
        System.Threading.Tasks.Task SetDatabaseFileAsync(string File);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAthleteService/StartQueueTimer", ReplyAction="http://tempuri.org/IAthleteService/StartQueueTimerResponse")]
        void StartQueueTimer();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAthleteService/StartQueueTimer", ReplyAction="http://tempuri.org/IAthleteService/StartQueueTimerResponse")]
        System.Threading.Tasks.Task StartQueueTimerAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAthleteService/StoreAthlete", ReplyAction="http://tempuri.org/IAthleteService/StoreAthleteResponse")]
        bool StoreAthlete(AthleteRegistration.AthleteService.AthleteDto athlete);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAthleteService/StoreAthlete", ReplyAction="http://tempuri.org/IAthleteService/StoreAthleteResponse")]
        System.Threading.Tasks.Task<bool> StoreAthleteAsync(AthleteRegistration.AthleteService.AthleteDto athlete);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAthleteService/GetAllAthletes", ReplyAction="http://tempuri.org/IAthleteService/GetAllAthletesResponse")]
        System.Collections.Generic.List<AthleteRegistration.AthleteService.AthleteDto> GetAllAthletes(bool IncludeCrew);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAthleteService/GetAllAthletes", ReplyAction="http://tempuri.org/IAthleteService/GetAllAthletesResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.List<AthleteRegistration.AthleteService.AthleteDto>> GetAllAthletesAsync(bool IncludeCrew);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAthleteService/ExistingAthlete", ReplyAction="http://tempuri.org/IAthleteService/ExistingAthleteResponse")]
        AthleteRegistration.AthleteService.AthleteDto ExistingAthlete(int Bib);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAthleteService/ExistingAthlete", ReplyAction="http://tempuri.org/IAthleteService/ExistingAthleteResponse")]
        System.Threading.Tasks.Task<AthleteRegistration.AthleteService.AthleteDto> ExistingAthleteAsync(int Bib);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAthleteService/GetNewAthlete", ReplyAction="http://tempuri.org/IAthleteService/GetNewAthleteResponse")]
        AthleteRegistration.AthleteService.AthleteDto GetNewAthlete();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAthleteService/GetNewAthlete", ReplyAction="http://tempuri.org/IAthleteService/GetNewAthleteResponse")]
        System.Threading.Tasks.Task<AthleteRegistration.AthleteService.AthleteDto> GetNewAthleteAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAthleteService/IsAlive", ReplyAction="http://tempuri.org/IAthleteService/IsAliveResponse")]
        bool IsAlive();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAthleteService/IsAlive", ReplyAction="http://tempuri.org/IAthleteService/IsAliveResponse")]
        System.Threading.Tasks.Task<bool> IsAliveAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAthleteServiceChannel : AthleteRegistration.AthleteService.IAthleteService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AthleteServiceClient : System.ServiceModel.ClientBase<AthleteRegistration.AthleteService.IAthleteService>, AthleteRegistration.AthleteService.IAthleteService {
        
        public AthleteServiceClient() {
        }
        
        public AthleteServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AthleteServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AthleteServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AthleteServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void SetDatabaseType(string Type) {
            base.Channel.SetDatabaseType(Type);
        }
        
        public System.Threading.Tasks.Task SetDatabaseTypeAsync(string Type) {
            return base.Channel.SetDatabaseTypeAsync(Type);
        }
        
        public void SetDatabaseFile(string File) {
            base.Channel.SetDatabaseFile(File);
        }
        
        public System.Threading.Tasks.Task SetDatabaseFileAsync(string File) {
            return base.Channel.SetDatabaseFileAsync(File);
        }
        
        public void StartQueueTimer() {
            base.Channel.StartQueueTimer();
        }
        
        public System.Threading.Tasks.Task StartQueueTimerAsync() {
            return base.Channel.StartQueueTimerAsync();
        }
        
        public bool StoreAthlete(AthleteRegistration.AthleteService.AthleteDto athlete) {
            return base.Channel.StoreAthlete(athlete);
        }
        
        public System.Threading.Tasks.Task<bool> StoreAthleteAsync(AthleteRegistration.AthleteService.AthleteDto athlete) {
            return base.Channel.StoreAthleteAsync(athlete);
        }
        
        public System.Collections.Generic.List<AthleteRegistration.AthleteService.AthleteDto> GetAllAthletes(bool IncludeCrew) {
            return base.Channel.GetAllAthletes(IncludeCrew);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.List<AthleteRegistration.AthleteService.AthleteDto>> GetAllAthletesAsync(bool IncludeCrew) {
            return base.Channel.GetAllAthletesAsync(IncludeCrew);
        }
        
        public AthleteRegistration.AthleteService.AthleteDto ExistingAthlete(int Bib) {
            return base.Channel.ExistingAthlete(Bib);
        }
        
        public System.Threading.Tasks.Task<AthleteRegistration.AthleteService.AthleteDto> ExistingAthleteAsync(int Bib) {
            return base.Channel.ExistingAthleteAsync(Bib);
        }
        
        public AthleteRegistration.AthleteService.AthleteDto GetNewAthlete() {
            return base.Channel.GetNewAthlete();
        }
        
        public System.Threading.Tasks.Task<AthleteRegistration.AthleteService.AthleteDto> GetNewAthleteAsync() {
            return base.Channel.GetNewAthleteAsync();
        }
        
        public bool IsAlive() {
            return base.Channel.IsAlive();
        }
        
        public System.Threading.Tasks.Task<bool> IsAliveAsync() {
            return base.Channel.IsAliveAsync();
        }
    }
}
